---
import { toggleMenu } from "../scripts/menu.js";
import LogoSmall from "./atoms/LogoSmall.astro";
import {
  getLangFromUrl,
  useTranslations,
  useTranslatedPath,
} from "../i18n/utils.js";
import LanguagePicker from "./molecules/LanguagePicker.astro";
import Hamburguer from "./Hamburguer.astro";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const translatePath = useTranslatedPath(lang);

interface navigationData {
  nav: NavigationItem[];
}

interface NavigationItem {
  name: string;
  ariaLabel: string;
  url: string;
}

const allData = import.meta.glob<navigationData>("../data/*/uiData.json", {
  eager: true,
});
const matchedEntry = Object.entries(allData).find(([path]) =>
  path.includes(`/${lang}/`)
);
const navigationData = matchedEntry?.[1];
---

<div
  class="nav-links hidden pt-20 flex items-center fixed w-full gap-4 text-2xl z-50 flex-col max-w-screen-lg text-[#fff] px-6 py-10 transform -translate-x-1/2 left-1/2 backdrop-blur-lg bg-[#111]"
  style="text-shadow: 0px 0px 4px rgba(0,0,0,0.6);"
>
  {
    navigationData?.nav.map((navigationItem) => (
      <a
        href={navigationItem.url}
        class="nav-item py-2 rounded-full text-center"
        aria-label={navigationItem.ariaLabel}
      >
        {navigationItem.name}
      </a>
    ))
  }
  <div class="nav-item mt-2"><LanguagePicker /></div>
</div>
<div
  class="nav-links-desktop  fixed w-full z-100 transition duration-500 height-[40px] fixed items-center w-full gap-2 text-2xl z-60 flex text-[#ddd] px-6 py-4 transition duration-300
   md:top-0 md:flex md:flex-row md:py-4 md:h-auto justify-between md:text-base md:text-[#ccc] md:font-light"
>
  <div class="order-2 md:order-1 lg:hidden">
    <Hamburguer />
  </div>
  <div class="order-1 md:order-2 lg:order-1">
  <LogoSmall /></div>
  <div
    class="hidden flex gap-12 absolute left-1/2 transform -translate-x-1/2 lg:flex"
  >
    {
      navigationData?.nav.map((navigationItem) => (
        <a
          href={navigationItem.url}
          class="nav-item-desktop py-2 rounded-full transition-all duration-300 ease-in-out flex items-center text-center"
          aria-label={navigationItem.ariaLabel}
        >
          {navigationItem.name}
        </a>
      ))
    }
  </div>
  <div class="hidden order-3 md:flex">
    <LanguagePicker />
  </div>
  <!--a href="/about/" class="nav-item px-8 py-2 rounded-full flex">Sobre mi</a>
  <a href="/blog/" class="nav-item px-8 py-2 rounded-full flex">Blog</a>
  <a href="/tags/" class="nav-item px-8 py-2 rounded-full flex">Etiquetas</a-->
</div>

<script>
  import "../scripts/menu.js";
  let lastScrollTop = 0;
  const scrollThreshold = 10;
  const blurThreshold = 50;
  const navbar = document.querySelector(".nav-links-desktop") as HTMLDivElement;

  // Función para manejar el scroll en cualquier resolución (solo BLUR)
  function handleBlur(currentScroll: number) {
    if (currentScroll > blurThreshold) {
      navbar.classList.add(
        "backdrop-blur-xl",
        "bg-[rgba(20,20,20,0.6)]",
        "border-[rgba(255,255,255,0.1)]",
        "border-b"
      );
    } else {
      navbar.classList.remove(
        "backdrop-blur-xl",
        "bg-[rgba(20,20,20,0.6)]",
        "border-[rgba(255,255,255,0.1)]",
        "border-b"
      );
    }
  }

  // Función para mostrar/ocultar navbar solo en mobile/tablet
  function handleScrollHide(currentScroll: number) {
    if (Math.abs(currentScroll - lastScrollTop) > scrollThreshold) {
      if (currentScroll > lastScrollTop) {
        // Scroll hacia abajo → ocultar navbar
        navbar.style.transform = "translateY(-100%)";
      } else {
        // Scroll hacia arriba → mostrar navbar
        navbar.style.transform = "translateY(0)";
      }
      lastScrollTop = currentScroll <= 0 ? 0 : currentScroll;
    }
  }

  // Scroll listener general
  window.addEventListener("scroll", () => {
    const currentScroll =
      window.pageYOffset || document.documentElement.scrollTop;

    // ✅ Siempre aplicar el blur
    handleBlur(currentScroll);

    // ✅ Solo ocultar/mostrar si es pantalla < 1024px
    if (window.innerWidth < 1024) {
      handleScrollHide(currentScroll);
    }
  });
</script>