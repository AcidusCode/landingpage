---
import InterSectionText from "../../components/molecules/InterSectionText.astro";
import CtaButton from "../atoms/CtaButton.astro";

import step1 from "../../images/myprocess/step-one.png";
import step2 from "../../images/myprocess/step-two.png";
import step3 from "../../images/myprocess/step-three.png";
import step4 from "../../images/myprocess/step-four.png";
import MyProcessCard from "../organism/MyProcessCard.astro";
import MyProcessCard2 from "../organism/MyProcessCard2.astro";

import { getLangFromUrl } from "../../i18n/utils";
import Image from "astro/components/Image.astro";

interface IndexData {
  designProcess: {
    preheading?: string;
    title: string;
    subtitle: string;
    titleClass: string;
    subtitleClass: string;
    cta: string;
    steps: StepItem[];
  };
}

interface StepItem {
  icon: string;
  stepName: string;
  title: string;
  description: string;
  color: string;
  videoSrc: string;
  coverSrc: string;
}

const lang = getLangFromUrl(Astro.url);
const allData = import.meta.glob<IndexData>("../../data/*/indexData.json", {
  eager: true,
});
const matchedEntry = Object.entries(allData).find(([path]) =>
  path.includes(`/${lang}/`)
);
const indexData = matchedEntry?.[1];

const title = indexData?.designProcess?.title;
const titleClass = indexData?.designProcess?.titleClass;
const subtitle = indexData?.designProcess?.subtitle;
const subtitleClass = indexData?.designProcess?.subtitleClass;
const cta = indexData?.designProcess?.cta;
---

<section class="sectionMyProcess md:pt-16" id="designProcess">
  <div class="md:w-[90%] lg:w-[80%] 2xl:w-[60%] mx-auto">
    <InterSectionText
      preheading={indexData?.designProcess?.preheading}
      title={title}
      classTitle={titleClass}
      description={subtitle}
      classDesc={subtitleClass}
      marginDesc="mx-10 2xl:mx-[10%]"
    />
  </div>
  <div class="myprocess flex flex-col gap-8 md:gap-14 px-4 md:w-[90%] lg:w-[80%] md:max-w-[1300px] md:mx-auto">
    {
      indexData?.designProcess.steps.map((item, i) => (
        <MyProcessCard2
          key={i}
          icon={item.icon}
          number={item.stepName}
          title={item.title}
          description={item.description}
          color={item.color}
          videoSrc={item.videoSrc}
          coverSrc={item.coverSrc}
        />
      ))
    }
  </div>
  <div class="flex justify-center mt-20 mb-12">
    <CtaButton text={cta} ariaLabel={cta} color="#8100B1" />
  </div>
</section>

<script>
  import gsap from "gsap";
  import ScrollTrigger from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);

  let tl = gsap.timeline({
    scrollTrigger: {
      trigger: ".sectionMyProcess",
      start: "top 80%",
      toggleActions: "restart none none reset",
    },
  });

  tl.from(".titleMyProcess", {
    duration: 1,
    scale: 0.8,
    opacity: 0,
    ease: "sine.out",
  })
    .from(
      ".descMyProcess",
      {
        duration: 1,
        scale: 0.9,
        opacity: 0,
        ease: "sine.out",
      },
      "-=.5"
    )
    .from(
      ".myprocess",
      {
        duration: 1.2,
        y: 20,
        opacity: 0,
        ease: "sine.out",
      },
      "-=.5"
    );
</script>
